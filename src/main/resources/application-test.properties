######################################################################################
									# 测试 数据库配置#
######################################################################################
#server
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url = jdbc:mysql://localhost:3307/declare_system_test?useUnicode=true&characterEncoding=utf-8
spring.datasource.url = jdbc:mysql://172.16.10.211:3306/declare_system?useUnicode=true&characterEncoding=utf-8
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root.456
#spring.datasource.password=root
spring.jpa.show-sql=true

spring.datasource.initialSize=5  
spring.datasource.minIdle=5  
spring.datasource.maxActive=20  
spring.datasource.maxWait=60000  
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true


#mybatis
#mybatis.mapperLocations=classpath:mapper/*.xml

#mybatis.type-aliases-package=cn.com.bonc.entity

# 访问路径前缀
#server.context-path = /spring-boot

#server.port=9090

#logging.level.org.springframework.web = debug


######################################################################################
									#redis配置#
######################################################################################
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=172.16.16.73
#spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
#spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=80
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=2000
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=20
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=5
# 连接超时时间（毫秒）
spring.redis.timeout=3000
# 可以解决session失效问题
spring.session.store-type=none

  
######################################################################################
									#rabbitMQ配置#
######################################################################################
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5673
spring.rabbitmq.username=tportal
spring.rabbitmq.password=tportal



######################################################################################
									#项目相关配置#
######################################################################################
#项目登录页
loginHtml=http://san.511860.com/declare/login.html

#专家允许访问的接口,以逗号分隔
allow.expert=declareInfo,safeSettings,evaluation,declareInfo,caseScreen,load
#企业允许访问的接口,以逗号分隔
allow.enterprise=load,declareInfo,safeSettings,evaluation,declareInfo,caseScreen,load
#管理员允许访问的接口,以逗号分隔
allow.administrators=caseSelect,safeSettings,declareInfo,caseScreen,load

#(这里是限制的文件大小)
spring.http.multipart.maxFileSize=34Mb
spring.http.multipart.maxRequestSize=34Mb
#(这里是限制的文件大小)
#multipart.maxRequestSize=50Mb

#上传产品文件保存地址  (本地测试)
#upload.product.url=d:/project_sts/caseDeclare_System/src/main/webapp/dataUpLoad/uploadProduct/
#html.product.url=d:/project_sts/caseDeclare_System/src/main/webapp/dataUpLoad/html/
upload.product.url=d:/
html.product.url=d:/
#上传方案文件保存地址  (本地测试)
#upload.plan.url=d:/project_sts/caseDeclare_System/src/main/webapp/dataUpLoad/uploadPlan/
#html.plan.url=d:/project_sts/caseDeclare_System/src/main/webapp/dataUpLoad/html/
upload.plan.url=d:/
html.plan.url=d:/


#server.port=8080